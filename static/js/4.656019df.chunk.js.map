{"version":3,"sources":["assets/constants.js","redux/actions.js","components/CustomButton/CustomButton.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/PostInfo/PostInfo.js","components/Pagination/Pagination.js","pages/HomePage/HomePage.jsx"],"names":["API","customUser","id","username","name","phone","email","customUserId","postsPerPage","fetchAllPosts","dispatch","fetch","then","res","json","posts","type","FETCH_ALL_POSTS","payload","catch","err","FETCH_ALL_POSTS_FAILURE","fetchUserData","userId","FETCH_USERDATA","user","FETCH_USERDATA_FAILURE","fetchComments","postId","comment","FETCH_COMMENTS","FETCH_COMMENTS_FAILURE","addPost","data","ADD_POST","removePost","REMOVE_POST","editPost","EDIT_POST","CustomButton","color","text","to","className","onClick","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","TypeError","PostInfo","title","body","Pagination","page","handler","numberOfPage","Math","ceil","map","elem","idx","key","HomePage","useState","setPage","filter","setFilter","select","setSelect","useDispatch","fetchAllPostsHandler","useCallback","removePostHandler","useSelector","state","useEffect","filteredPosts","post","toLowerCase","includes","firstPostOnPage","lastPostOnPage","onChange","e","target","placeholder","slice"],"mappings":"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","file":"static/js/4.656019df.chunk.js","sourcesContent":["export const API = `https://jsonplaceholder.typicode.com/`;\r\nexport const customUser = {\r\n  id: 999,\r\n  username: \"Custom username\",\r\n  name: \"Custom full name\",\r\n  phone: \"121212121212\",\r\n  email: \"custom.user@mail.ru\"\r\n};\r\nexport const customUserId = 999;\r\nexport const postsPerPage = 10;\r\n","import {\r\n  ADD_POST,\r\n  REMOVE_POST,\r\n  EDIT_POST,\r\n  FETCH_ALL_POSTS,\r\n  FETCH_ALL_POSTS_FAILURE,\r\n  FETCH_USERDATA,\r\n  FETCH_USERDATA_FAILURE,\r\n  FETCH_COMMENTS,\r\n  FETCH_COMMENTS_FAILURE\r\n} from \"./actionTypes\";\r\n\r\nimport { API, customUser } from \"../assets/constants\";\r\n\r\nexport const fetchAllPosts = () => dispatch => {\r\n  fetch(`${API}posts`)\r\n    .then(res => res.json())\r\n    .then(posts =>\r\n      dispatch({\r\n        type: FETCH_ALL_POSTS,\r\n        payload: posts\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n        type: FETCH_ALL_POSTS_FAILURE,\r\n        payload: err\r\n      })\r\n    );\r\n};\r\n\r\nexport const fetchUserData = userId => dispatch => {\r\n  userId === customUser.id\r\n    ? dispatch({\r\n        type: FETCH_USERDATA,\r\n        payload: customUser\r\n      })\r\n    : fetch(`${API}users/${userId}`)\r\n        .then(res => res.json())\r\n        .then(user =>\r\n          dispatch({\r\n            type: FETCH_USERDATA,\r\n            payload: user\r\n          })\r\n        )\r\n        .catch(err =>\r\n          dispatch({\r\n            type: FETCH_USERDATA_FAILURE,\r\n            payload: err\r\n          })\r\n        );\r\n};\r\n\r\nexport const fetchComments = postId => dispatch => {\r\n  fetch(`${API}comments?postId=${postId}`)\r\n    .then(res => res.json())\r\n    .then(comment =>\r\n      dispatch({\r\n        type: FETCH_COMMENTS,\r\n        payload: comment\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n        type: FETCH_COMMENTS_FAILURE,\r\n        payload: err\r\n      })\r\n    );\r\n};\r\n\r\nexport const addPost = ({ data }) => ({\r\n  type: ADD_POST,\r\n  payload: data\r\n});\r\n\r\nexport const removePost = id => ({\r\n  type: REMOVE_POST,\r\n  payload: { id }\r\n});\r\n\r\nexport const editPost = ({ data }) => ({\r\n  type: EDIT_POST,\r\n  payload: data\r\n});\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./CustomButton.scss\";\r\n\r\nconst CustomButton = ({ color, text, to, className, onClick }) => (\r\n  <>\r\n    {to ? (\r\n      <button className={`custom-btn ${className} ${color}`}>\r\n        <Link to={to}>{text}</Link>\r\n      </button>\r\n    ) : (\r\n      <button onClick={onClick} className={`custom-btn ${color}`}>\r\n        {text}\r\n      </button>\r\n    )}\r\n  </>\r\n);\r\n\r\nCustomButton.propTypes = {\r\n  color: PropTypes.string,\r\n  text: PropTypes.string,\r\n  to: PropTypes.string,\r\n  className: PropTypes.string,\r\n  onClick: PropTypes.func\r\n};\r\n\r\nexport default CustomButton;\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./PostInfo.scss\";\r\n\r\nconst PostInfo = ({ data }) => (\r\n  <div className=\"info\">\r\n    <h3>{data.title}</h3>\r\n    <p>{data.body}</p>\r\n    <p>#{data.id}</p>\r\n  </div>\r\n);\r\n\r\nPostInfo.propTypes = {\r\n  data: PropTypes.object.isRequired\r\n};\r\n\r\nexport default PostInfo;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Pagination.scss\";\r\n\r\nconst Pagination = ({ length, page, handler }) => {\r\n  const numberOfPage = Math.ceil(length);\r\n  const arr = [];\r\n\r\n  for (let i = 1; i <= numberOfPage; i++) {\r\n    arr[i - 1] = i;\r\n  }\r\n\r\n  return (\r\n    <ul onClick={handler} className=\"pagination\">\r\n      {arr.map((elem, idx) => (\r\n        <li\r\n          key={idx}\r\n          value={elem}\r\n          className={`pagination__item ${page === elem && \"selected\"}`}\r\n        >\r\n          {elem}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  length: PropTypes.number.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  handler: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchAllPosts, removePost } from \"../../redux/actions\";\r\n\r\nimport Pagination from \"../../components/Pagination/Pagination\";\r\nimport PostInfo from \"../../components/PostInfo/PostInfo\";\r\nimport CustomButton from \"../../components/CustomButton/CustomButton\";\r\n\r\nimport { postsPerPage } from \"../../assets/constants\";\r\n\r\nimport \"./HomePage.scss\";\r\n\r\nconst HomePage = () => {\r\n  const [page, setPage] = useState(1);\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [select, setSelect] = useState(\"title\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const fetchAllPostsHandler = useCallback(() => {\r\n    dispatch(fetchAllPosts());\r\n  }, [dispatch]);\r\n\r\n  const removePostHandler = useCallback(\r\n    id => {\r\n      dispatch(removePost(id));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const posts = useSelector(state => state.posts.posts);\r\n\r\n  useEffect(() => {\r\n    if (!posts.length) {\r\n      fetchAllPostsHandler();\r\n    }\r\n  }, [fetchAllPostsHandler, posts.length]);\r\n\r\n  const filteredPosts =\r\n    select === \"text\"\r\n      ? posts.filter(post =>\r\n          post.body.toLowerCase().includes(filter.toLowerCase())\r\n        )\r\n      : posts.filter(post =>\r\n          post.title.toLowerCase().includes(filter.toLowerCase())\r\n        );\r\n\r\n  const handlePagination = ({ target: { value } }) => {\r\n    value && setPage(value);\r\n  };\r\n\r\n  const searchInputHandler = e => {\r\n    page !== 1 && setPage(1);\r\n    setFilter(e.target.value);\r\n  };\r\n\r\n  const firstPostOnPage = page * postsPerPage - postsPerPage;\r\n  const lastPostOnPage = page * postsPerPage;\r\n\r\n  return (\r\n    <main className=\"homepage\">\r\n      <header>\r\n        <CustomButton\r\n          onClick={fetchAllPostsHandler}\r\n          color=\"black\"\r\n          text=\"Refetch list\"\r\n        />\r\n        <h1>List of Posts</h1>\r\n      </header>\r\n      <section className=\"controls\">\r\n        <div className=\"controls__inputs\">\r\n          <select value={select} onChange={e => setSelect(e.target.value)}>\r\n            <option value=\"title\">Title</option>\r\n            <option value=\"text\">Text</option>\r\n          </select>\r\n\r\n          <input\r\n            onChange={searchInputHandler}\r\n            value={filter}\r\n            type=\"text\"\r\n            placeholder={`Filter by ${select}...`}\r\n          />\r\n          <Link className=\"add-btn\" to=\"add/post\">\r\n            Add Post\r\n          </Link>\r\n        </div>\r\n\r\n        <Pagination\r\n          handler={handlePagination}\r\n          page={page}\r\n          length={filteredPosts.length / postsPerPage}\r\n        />\r\n      </section>\r\n\r\n      <section className=\"posts-list\">\r\n        {!filteredPosts || !filteredPosts.length ? (\r\n          <div className=\"not-found\">Not found!</div>\r\n        ) : (\r\n          <ul>\r\n            {filteredPosts\r\n              .slice(firstPostOnPage, lastPostOnPage)\r\n              .map((post, idx) => (\r\n                <li className=\"post-info\" key={idx}>\r\n                  <PostInfo data={post} />\r\n\r\n                  <div className=\"buttons\">\r\n                    <CustomButton\r\n                      to={`/posts/${post.id}`}\r\n                      color=\"green\"\r\n                      text=\"Read more...\"\r\n                    />\r\n\r\n                    <CustomButton\r\n                      onClick={() => removePostHandler(post.id)}\r\n                      color=\"red\"\r\n                      text=\"Delete\"\r\n                    />\r\n                  </div>\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        )}\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"sourceRoot":""}