{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","assets/constants.js","redux/actions.js","components/PostInfo/PostInfo.jsx","components/CustomButton/CustomButton.jsx","components/Pagination/Pagination.jsx","pages/HomePage/HomePage.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","API","fetchAllPosts","dispatch","fetch","then","res","json","posts","type","FETCH_ALL_POSTS","payload","fetchUserData","userId","user","FETCH_USERDATA","fetchComments","postId","comment","FETCH_COMMENTS","addPost","data","ADD_POST","removePost","id","REMOVE_POST","editPost","EDIT_POST","PostInfo","className","title","body","CustomButton","color","text","to","onClick","Pagination","page","handler","numberOfPage","Math","ceil","map","elem","idx","key","connect","state","useState","setPage","filter","setFilter","useEffect","console","log","filteredPosts","post","toLowerCase","includes","firstPostOnPage","lastPostOnPage","onChange","e","target","placeholder","slice"],"mappings":"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","file":"static/js/4.2bf08c8b.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","export const API = `https://jsonplaceholder.typicode.com/`;\r\n","import {\r\n  ADD_POST,\r\n  REMOVE_POST,\r\n  EDIT_POST,\r\n  FETCH_ALL_POSTS,\r\n  FETCH_USERDATA,\r\n  FETCH_COMMENTS\r\n} from \"./actionTypes\";\r\n\r\nimport { API } from \"../assets/constants\";\r\n\r\nexport const fetchAllPosts = () => dispatch => {\r\n  fetch(`${API}posts`)\r\n    .then(res => res.json())\r\n    .then(posts =>\r\n      dispatch({\r\n        type: FETCH_ALL_POSTS,\r\n        payload: posts\r\n      })\r\n    );\r\n};\r\n\r\nexport const fetchUserData = userId => dispatch => {\r\n  fetch(`${API}users/${userId}`)\r\n    .then(res => res.json())\r\n    .then(user =>\r\n      dispatch({\r\n        type: FETCH_USERDATA,\r\n        payload: user\r\n      })\r\n    );\r\n};\r\n\r\nexport const fetchComments = postId => dispatch => {\r\n  fetch(`${API}comments?postId=${postId}`)\r\n    .then(res => res.json())\r\n    .then(comment =>\r\n      dispatch({\r\n        type: FETCH_COMMENTS,\r\n        payload: comment\r\n      })\r\n    );\r\n};\r\n\r\nexport const addPost = ({ data }) => ({\r\n  type: ADD_POST,\r\n  payload: data\r\n});\r\n\r\nexport const removePost = id => ({\r\n  type: REMOVE_POST,\r\n  payload: { id }\r\n});\r\n\r\nexport const editPost = ({ data }) => ({\r\n  type: EDIT_POST,\r\n  payload: data\r\n});\r\n","import React from \"react\";\r\n\r\nimport \"./PostInfo.scss\";\r\n\r\nconst PostInfo = ({ data }) => (\r\n  <div className=\"info\">\r\n    <h3>{data.title}</h3>\r\n    <p>{data.body}</p>\r\n    <p>#{data.id}</p>\r\n  </div>\r\n);\r\nexport default PostInfo;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./CustomButton.scss\";\r\n\r\nconst CustomButton = ({ color, text, to, onClick }) => (\r\n  <>\r\n    {to ? (\r\n      <button className={color}>\r\n        <Link to={to}>{text}</Link>\r\n      </button>\r\n    ) : (\r\n      <button onClick={onClick} className={color}>\r\n        {text}\r\n      </button>\r\n    )}\r\n  </>\r\n);\r\n\r\nexport default CustomButton;\r\n","import React from \"react\";\r\n\r\nimport \"./Pagination.scss\";\r\n\r\nconst Pagination = ({ length, page, handler }) => {\r\n  const numberOfPage = Math.ceil(length);\r\n  const arr = [];\r\n  for (let i = 1; i <= numberOfPage; i++) {\r\n    arr[i - 1] = i;\r\n  }\r\n\r\n  return (\r\n    <ul onClick={handler} className=\"pagination\">\r\n      {arr.map((elem, idx) => (\r\n        <li\r\n          key={idx}\r\n          value={elem}\r\n          className={`pagination__item ${page === elem && \"selected\"}`}\r\n        >\r\n          {elem}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { fetchAllPosts, removePost } from \"../../redux/actions\";\r\n\r\nimport Pagination from \"../../components/Pagination/Pagination\";\r\nimport PostInfo from \"../../components/PostInfo/PostInfo\";\r\nimport CustomButton from \"../../components/CustomButton/CustomButton\";\r\n\r\nimport \"./HomePage.scss\";\r\n\r\nconst HomePage = ({ fetchAllPosts, removePost, posts }) => {\r\n  const [page, setPage] = useState(1);\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!posts.length) {\r\n      fetchAllPosts();\r\n      console.log(\"posts was fetched\");\r\n    }\r\n  }, [fetchAllPosts, posts]);\r\n\r\n  const postsPerPage = 10;\r\n\r\n  const filteredPosts = posts.filter(post =>\r\n    post.body.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n\r\n  const handlePagination = ({ target: { value } }) => {\r\n    value && setPage(value);\r\n  };\r\n\r\n  const searchInputHandler = e => {\r\n    page !== 1 && setPage(1);\r\n    setFilter(e.target.value);\r\n  };\r\n\r\n  const firstPostOnPage = page * postsPerPage - postsPerPage;\r\n  const lastPostOnPage = page * postsPerPage;\r\n\r\n  return (\r\n    <main className=\"homepage\">\r\n      <section className=\"controls\">\r\n        <h1>List of Posts</h1>\r\n\r\n        <div className=\"controls__inputs\">\r\n          <input\r\n            onChange={searchInputHandler}\r\n            value={filter}\r\n            type=\"text\"\r\n            placeholder=\"Filter by text...\"\r\n          />\r\n          <Link className=\"add-btn\" to=\"add/post\">\r\n            Add Post\r\n          </Link>\r\n        </div>\r\n\r\n        <Pagination\r\n          handler={handlePagination}\r\n          page={page}\r\n          length={filteredPosts.length / postsPerPage}\r\n        />\r\n      </section>\r\n\r\n      <section className=\"posts-list\">\r\n        {!filteredPosts || !filteredPosts.length ? (\r\n          <div className=\"not-found\">Not found!</div>\r\n        ) : (\r\n          <ul>\r\n            {filteredPosts\r\n              .slice(firstPostOnPage, lastPostOnPage)\r\n              .map((post, idx) => (\r\n                <li className=\"post-info\" key={idx}>\r\n                  <PostInfo data={post} />\r\n\r\n                  <div className=\"buttons\">\r\n                    <CustomButton\r\n                      to={`/posts/${post.id}`}\r\n                      color=\"green\"\r\n                      text=\"Read more...\"\r\n                    />\r\n\r\n                    <CustomButton\r\n                      onClick={() => removePost(post.id)}\r\n                      color=\"red\"\r\n                      text=\"Delete\"\r\n                    />\r\n                  </div>\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        )}\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nHomePage.propTypes = {\r\n  fetchAllPosts: PropTypes.func.isRequired,\r\n  posts: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: state.posts.posts\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchAllPosts, removePost })(\r\n  HomePage\r\n);\r\n"],"sourceRoot":""}