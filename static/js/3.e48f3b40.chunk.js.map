{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","assets/constants.js","redux/actions.js","components/PostInfo/PostInfo.jsx","components/CustomButton/CustomButton.jsx","components/ChangeForm/ChangeForm.jsx","pages/PostPage/PostPage.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","API","fetchAllPosts","dispatch","fetch","then","res","json","posts","type","FETCH_ALL_POSTS","payload","fetchUserData","userId","user","FETCH_USERDATA","fetchComments","postId","comment","FETCH_COMMENTS","addPost","data","ADD_POST","removePost","id","REMOVE_POST","editPost","EDIT_POST","PostInfo","className","title","body","CustomButton","color","text","to","onClick","ChangeForm","onSubmit","handlerTitle","handlerBody","htmlFor","autoFocus","onChange","placeholder","required","rows","connect","state","users","comments","props","match","history","params","post","find","useState","open","setOpen","setData","useEffect","username","name","href","email","phone","e","preventDefault","target","map","idx","key"],"mappings":"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","file":"static/js/3.e48f3b40.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","export const API = `https://jsonplaceholder.typicode.com/`;\r\n","import {\r\n  ADD_POST,\r\n  REMOVE_POST,\r\n  EDIT_POST,\r\n  FETCH_ALL_POSTS,\r\n  FETCH_USERDATA,\r\n  FETCH_COMMENTS\r\n} from \"./actionTypes\";\r\n\r\nimport { API } from \"../assets/constants\";\r\n\r\nexport const fetchAllPosts = () => dispatch => {\r\n  fetch(`${API}posts`)\r\n    .then(res => res.json())\r\n    .then(posts =>\r\n      dispatch({\r\n        type: FETCH_ALL_POSTS,\r\n        payload: posts\r\n      })\r\n    );\r\n};\r\n\r\nexport const fetchUserData = userId => dispatch => {\r\n  fetch(`${API}users/${userId}`)\r\n    .then(res => res.json())\r\n    .then(user =>\r\n      dispatch({\r\n        type: FETCH_USERDATA,\r\n        payload: user\r\n      })\r\n    );\r\n};\r\n\r\nexport const fetchComments = postId => dispatch => {\r\n  fetch(`${API}comments?postId=${postId}`)\r\n    .then(res => res.json())\r\n    .then(comment =>\r\n      dispatch({\r\n        type: FETCH_COMMENTS,\r\n        payload: comment\r\n      })\r\n    );\r\n};\r\n\r\nexport const addPost = ({ data }) => ({\r\n  type: ADD_POST,\r\n  payload: data\r\n});\r\n\r\nexport const removePost = id => ({\r\n  type: REMOVE_POST,\r\n  payload: { id }\r\n});\r\n\r\nexport const editPost = ({ data }) => ({\r\n  type: EDIT_POST,\r\n  payload: data\r\n});\r\n","import React from \"react\";\r\n\r\nimport \"./PostInfo.scss\";\r\n\r\nconst PostInfo = ({ data }) => (\r\n  <div className=\"info\">\r\n    <h3>{data.title}</h3>\r\n    <p>{data.body}</p>\r\n    <p>#{data.id}</p>\r\n  </div>\r\n);\r\nexport default PostInfo;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./CustomButton.scss\";\r\n\r\nconst CustomButton = ({ color, text, to, onClick }) => (\r\n  <>\r\n    {to ? (\r\n      <button className={color}>\r\n        <Link to={to}>{text}</Link>\r\n      </button>\r\n    ) : (\r\n      <button onClick={onClick} className={color}>\r\n        {text}\r\n      </button>\r\n    )}\r\n  </>\r\n);\r\n\r\nexport default CustomButton;\r\n","import React from \"react\";\r\n\r\nimport \"./ChangeForm.scss\";\r\n\r\nconst ChangeForm = ({ onSubmit, handlerTitle, handlerBody, text }) => (\r\n  <form className=\"form-edit\" onSubmit={onSubmit}>\r\n    <div>\r\n      <label htmlFor=\"title\">Title</label>\r\n      <input\r\n        autoFocus\r\n        onChange={handlerTitle}\r\n        id=\"title\"\r\n        type=\"text\"\r\n        placeholder=\"Title...\"\r\n        required\r\n      />\r\n    </div>\r\n\r\n    <div>\r\n      <label htmlFor=\"text\">Text</label>\r\n      <textarea\r\n        onChange={handlerBody}\r\n        id=\"text\"\r\n        rows=\"10\"\r\n        placeholder=\"Text...\"\r\n        required\r\n      ></textarea>\r\n    </div>\r\n\r\n    <button type=\"submit\">{text}</button>\r\n  </form>\r\n);\r\n\r\nexport default ChangeForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  fetchUserData,\r\n  fetchComments,\r\n  removePost,\r\n  editPost\r\n} from \"../../redux/actions\";\r\n\r\nimport PostInfo from \"../../components/PostInfo/PostInfo\";\r\nimport CustomButton from \"../../components/CustomButton/CustomButton\";\r\nimport ChangeForm from \"../../components/ChangeForm/ChangeForm\";\r\n\r\nimport \"./PostPage.scss\";\r\n\r\nconst PostPage = props => {\r\n  const {\r\n    fetchUserData,\r\n    fetchComments,\r\n    removePost,\r\n    editPost,\r\n    comments,\r\n    posts,\r\n    users,\r\n    match,\r\n    history\r\n  } = props;\r\n\r\n  const { id } = match.params;\r\n  const post = posts.find(post => post.id === +id);\r\n  const user = users.find(user => user.id === post.userId);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [data, setData] = useState({\r\n    title: \"\",\r\n    body: \"\",\r\n    id: +id\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!users.find(user => user.id === post.userId)) {\r\n      fetchUserData(post.userId);\r\n    }\r\n    fetchComments(id);\r\n  }, [fetchComments, fetchUserData, id, post.userId, users]);\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    editPost({ data });\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <main className=\"postpage\">\r\n      <div className=\"heading\">\r\n        <Link className=\"go-back\" to=\"/posts\">\r\n          Go back\r\n        </Link>\r\n\r\n        <h1>Post #{id}</h1>\r\n      </div>\r\n\r\n      {user && (\r\n        <section className=\"user-info\">\r\n          <h2>Author</h2>\r\n          <h3>Username - {user.username}</h3>\r\n          <h4>Real name - {user.name}</h4>\r\n          <p>\r\n            Email - <a href={`mailto:${user.email}`}>{user.email}</a>\r\n          </p>\r\n          <p>\r\n            Phone - <a href={`tel:${user.phone}`}>{user.phone}</a>\r\n          </p>\r\n        </section>\r\n      )}\r\n\r\n      <section className=\"post-info\">\r\n        <PostInfo data={post} />\r\n\r\n        <div className=\"buttons\">\r\n          <CustomButton\r\n            onClick={() => setOpen(!open)}\r\n            color=\"blue\"\r\n            text=\"Edit\"\r\n          />\r\n\r\n          <CustomButton\r\n            onClick={() => {\r\n              removePost(+id);\r\n              history.push(`/posts`);\r\n            }}\r\n            color=\"red\"\r\n            text=\"Delete\"\r\n          />\r\n        </div>\r\n      </section>\r\n\r\n      {open && (\r\n        <ChangeForm\r\n          text=\"Save\"\r\n          onSubmit={onSubmit}\r\n          handlerTitle={e =>\r\n            setData({ title: e.target.value, body: data.body, id: +id })\r\n          }\r\n          handlerBody={e =>\r\n            setData({ body: e.target.value, title: data.title, id: +id })\r\n          }\r\n        />\r\n      )}\r\n\r\n      <section className=\"comments\">\r\n        <h3>Comments</h3>\r\n        <ul>\r\n          {comments.map((comment, idx) => (\r\n            <li key={idx}>\r\n              <a href={`mailto:${comment.email}`}>{comment.email}</a>\r\n              <h4>{comment.name}</h4>\r\n              <p>{comment.body}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: state.posts.posts,\r\n  users: state.users,\r\n  comments: state.comments\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  fetchUserData,\r\n  fetchComments,\r\n  removePost,\r\n  editPost\r\n})(PostPage);\r\n"],"sourceRoot":""}